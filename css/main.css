:root{
  --primary-color: plum;
  --secondary-color: purple;
  --light-color: white;
  --dark-color:black;
  --special-color:tomato;
  --medium-font:1.25rem;
  --large-font:2rem;
}

/* .is class name selector */
.container{
  max-width: 900px;
  margin: 0 auto;
}

/* space is descendent combinator */
nav ul{
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  /* justify-content: space-evenly; */
}

nav ul li{
  flex: 1;
}

/* LoVe HAte */
nav li a,
nav li a:link,
nav li a:visited{
  display: inline-block;
  text-decoration: none;
  text-transform: uppercase;
  color: var(--dark-color);
  transition: transform .5s;
}

nav li :hover,
nav li :focus{
  text-decoration: underline;
  transform: scale(1.25);
}

nav li a:active{
  transform: scale(1.25) translateX(15px);
}

/* :link, :visited, :hover, :focus, :active are pseudo classes */

/* [] is for attribute selector */
a[href="#"]{
  border: 1px solid var(--primary-color);
}

/* ^ is for start with */
a[href^="http"]{
  border-left: 8px solid var(--secondary-color);
}

/* > is child combinator */
main > p{
  font-size: var(--medium-font);
}

/* + is adjacent combinator (right next to the selector)*/
h2 + p{
  background-color: rgba(0, 0, 0, 0.478);
  color: var(--light-color);
  padding: 1rem;
}

/* chnage the coursor to a pointer */
.stars span{
  cursor: pointer;  
  transition: opacity .5s;
}

/* ~ is sibling combinator */
.stars span:hover~span{
  opacity: .4;
}

/* $= is for value  ends with */
a[href$=".pdf"]{
  color: var(--special-color);
}

/* ::after is pseudo element */
a[href$=".pdf"]::after{
  content:"\2193";
  font-weight: bold;
  font-size: 1.25rem;
}

h2+p:first-line{
  color:var(--primary-color);
}

h3+p::first-letter{
  background-color: var(--secondary-color);
  color: var(--primary-color);
  padding: .25rem;
  margin-right: .10rem;
}

.davidmedia{
  display: block;
  width: calc(100%-4rem-4rem-8px);
  padding: 2rem;
  margin: 2rem;
  background: var(--secondary-color);
  color: var(--light-color);
}